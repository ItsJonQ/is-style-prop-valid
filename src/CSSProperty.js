export const unitlessStyleKeys = [
	"animationIterationCount",
	"borderImageOutset",
	"borderImageSlice",
	"borderImageWidth",
	"boxFlex",
	"boxFlexGroup",
	"boxOrdinalGroup",
	"columnCount",
	"columns",
	"flex",
	"flexGrow",
	"flexPositive",
	"flexShrink",
	"flexNegative",
	"flexOrder",
	"gridArea",
	"gridRow",
	"gridRowEnd",
	"gridRowSpan",
	"gridRowStart",
	"gridColumn",
	"gridColumnEnd",
	"gridColumnSpan",
	"gridColumnStart",
	"fontWeight",
	"lineClamp",
	"lineHeight",
	"opacity",
	"order",
	"orphans",
	"tabSize",
	"widows",
	"zIndex",
	"zoom",
	"fillOpacity",
	"floodOpacity",
	"stopOpacity",
	"strokeDasharray",
	"strokeDashoffset",
	"strokeMiterlimit",
	"strokeOpacity",
	"strokeWidth"
];

export const validStyleKeys = [
	"alignContent",
	"alignItems",
	"alignSelf",
	"alignmentBaseline",
	"all",
	"animation",
	"animationDelay",
	"animationDirection",
	"animationDuration",
	"animationFillMode",
	"animationIterationCount",
	"animationName",
	"animationPlayState",
	"animationTimingFunction",
	"appearance",
	"backdropFilter",
	"backfaceVisibility",
	"background",
	"backgroundAttachment",
	"backgroundBlendMode",
	"backgroundClip",
	"backgroundColor",
	"backgroundImage",
	"backgroundOrigin",
	"backgroundPosition",
	"backgroundPositionX",
	"backgroundPositionY",
	"backgroundRepeat",
	"backgroundRepeatX",
	"backgroundRepeatY",
	"backgroundSize",
	"baselineShift",
	"blockSize",
	"border",
	"borderBlockEnd",
	"borderBlockEndColor",
	"borderBlockEndStyle",
	"borderBlockEndWidth",
	"borderBlockStart",
	"borderBlockStartColor",
	"borderBlockStartStyle",
	"borderBlockStartWidth",
	"borderBottom",
	"borderBottomColor",
	"borderBottomLeftRadius",
	"borderBottomRightRadius",
	"borderBottomStyle",
	"borderBottomWidth",
	"borderCollapse",
	"borderColor",
	"borderImage",
	"borderImageOutset",
	"borderImageRepeat",
	"borderImageSlice",
	"borderImageSource",
	"borderImageWidth",
	"borderInlineEnd",
	"borderInlineEndColor",
	"borderInlineEndStyle",
	"borderInlineEndWidth",
	"borderInlineStart",
	"borderInlineStartColor",
	"borderInlineStartStyle",
	"borderInlineStartWidth",
	"borderLeft",
	"borderLeftColor",
	"borderLeftStyle",
	"borderLeftWidth",
	"borderRadius",
	"borderRight",
	"borderRightColor",
	"borderRightStyle",
	"borderRightWidth",
	"borderSpacing",
	"borderStyle",
	"borderTop",
	"borderTopColor",
	"borderTopLeftRadius",
	"borderTopRightRadius",
	"borderTopStyle",
	"borderTopWidth",
	"borderWidth",
	"bottom",
	"boxShadow",
	"boxSizing",
	"breakAfter",
	"breakBefore",
	"breakInside",
	"bufferedRendering",
	"captionSide",
	"caretColor",
	"clear",
	"clip",
	"clipPath",
	"clipRule",
	"color",
	"colorInterpolation",
	"colorInterpolationFilters",
	"colorRendering",
	"columnCount",
	"columnFill",
	"columnGap",
	"columnRule",
	"columnRuleColor",
	"columnRuleStyle",
	"columnRuleWidth",
	"columnSpan",
	"columnWidth",
	"columns",
	"contain",
	"content",
	"counterIncrement",
	"counterReset",
	"cursor",
	"cx",
	"cy",
	"d",
	"direction",
	"display",
	"dominantBaseline",
	"emptyCells",
	"fill",
	"fillOpacity",
	"fillRule",
	"filter",
	"flex",
	"flexBasis",
	"flexDirection",
	"flexFlow",
	"flexGrow",
	"flexShrink",
	"flexWrap",
	"float",
	"floodColor",
	"floodOpacity",
	"font",
	"fontDisplay",
	"fontFamily",
	"fontFeatureSettings",
	"fontKerning",
	"fontSize",
	"fontStretch",
	"fontStyle",
	"fontVariant",
	"fontVariantCaps",
	"fontVariantEastAsian",
	"fontVariantLigatures",
	"fontVariantNumeric",
	"fontVariationSettings",
	"fontWeight",
	"gap",
	"grid",
	"gridArea",
	"gridAutoColumns",
	"gridAutoFlow",
	"gridAutoRows",
	"gridColumn",
	"gridColumnEnd",
	"gridColumnGap",
	"gridColumnStart",
	"gridGap",
	"gridRow",
	"gridRowEnd",
	"gridRowGap",
	"gridRowStart",
	"gridTemplate",
	"gridTemplateAreas",
	"gridTemplateColumns",
	"gridTemplateRows",
	"height",
	"hyphens",
	"imageRendering",
	"inlineSize",
	"isolation",
	"justifyContent",
	"justifyItems",
	"justifySelf",
	"left",
	"letterSpacing",
	"lightingColor",
	"lineBreak",
	"lineHeight",
	"listStyle",
	"listStyleImage",
	"listStylePosition",
	"listStyleType",
	"margin",
	"marginBlockEnd",
	"marginBlockStart",
	"marginBottom",
	"marginInlineEnd",
	"marginInlineStart",
	"marginLeft",
	"marginRight",
	"marginTop",
	"marker",
	"markerEnd",
	"markerMid",
	"markerStart",
	"mask",
	"maskType",
	"maxBlockSize",
	"maxHeight",
	"maxInlineSize",
	"maxWidth",
	"maxZoom",
	"minBlockSize",
	"minHeight",
	"minInlineSize",
	"minWidth",
	"minZoom",
	"mixBlendMode",
	"objectFit",
	"objectPosition",
	"offset",
	"offsetDistance",
	"offsetPath",
	"offsetRotate",
	"opacity",
	"order",
	"orientation",
	"orphans",
	"outline",
	"outlineColor",
	"outlineOffset",
	"outlineStyle",
	"outlineWidth",
	"overflow",
	"overflowAnchor",
	"overflowWrap",
	"overflowX",
	"overflowY",
	"overscrollBehavior",
	"overscrollBehaviorBlock",
	"overscrollBehaviorInline",
	"overscrollBehaviorX",
	"overscrollBehaviorY",
	"padding",
	"paddingBlockEnd",
	"paddingBlockStart",
	"paddingBottom",
	"paddingInlineEnd",
	"paddingInlineStart",
	"paddingLeft",
	"paddingRight",
	"paddingTop",
	"page",
	"pageBreakAfter",
	"pageBreakBefore",
	"pageBreakInside",
	"paintOrder",
	"perspective",
	"perspectiveOrigin",
	"placeContent",
	"placeItems",
	"placeSelf",
	"pointerEvents",
	"position",
	"quotes",
	"r",
	"resize",
	"right",
	"rowGap",
	"rx",
	"ry",
	"scrollBehavior",
	"scrollMargin",
	"scrollMarginBlock",
	"scrollMarginBlockEnd",
	"scrollMarginBlockStart",
	"scrollMarginBottom",
	"scrollMarginInline",
	"scrollMarginInlineEnd",
	"scrollMarginInlineStart",
	"scrollMarginLeft",
	"scrollMarginRight",
	"scrollMarginTop",
	"scrollPadding",
	"scrollPaddingBlock",
	"scrollPaddingBlockEnd",
	"scrollPaddingBlockStart",
	"scrollPaddingBottom",
	"scrollPaddingInline",
	"scrollPaddingInlineEnd",
	"scrollPaddingInlineStart",
	"scrollPaddingLeft",
	"scrollPaddingRight",
	"scrollPaddingTop",
	"scrollSnapAlign",
	"scrollSnapStop",
	"scrollSnapType",
	"shapeImageThreshold",
	"shapeMargin",
	"shapeOutside",
	"shapeRendering",
	"size",
	"speak",
	"src",
	"stopColor",
	"stopOpacity",
	"stroke",
	"strokeDasharray",
	"strokeDashoffset",
	"strokeLinecap",
	"strokeLinejoin",
	"strokeMiterlimit",
	"strokeOpacity",
	"strokeWidth",
	"tabSize",
	"tableLayout",
	"textAlign",
	"textAlignLast",
	"textAnchor",
	"textCombineUpright",
	"textDecoration",
	"textDecorationColor",
	"textDecorationLine",
	"textDecorationSkipInk",
	"textDecorationStyle",
	"textIndent",
	"textOrientation",
	"textOverflow",
	"textRendering",
	"textShadow",
	"textSizeAdjust",
	"textTransform",
	"textUnderlinePosition",
	"top",
	"touchAction",
	"transform",
	"transformBox",
	"transformOrigin",
	"transformStyle",
	"transition",
	"transitionDelay",
	"transitionDuration",
	"transitionProperty",
	"transitionTimingFunction",
	"unicodeBidi",
	"unicodeRange",
	"userSelect",
	"userZoom",
	"vectorEffect",
	"verticalAlign",
	"visibility",
	"whiteSpace",
	"widows",
	"width",
	"willChange",
	"wordBreak",
	"wordSpacing",
	"wordWrap",
	"writingMode",
	"x",
	"y",
	"zIndex",
	"zoom"
];

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
	return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
const prefixes = ["webkit", "ms", "moz"];

/**
 * Add vendor prefixing to unitless style keys.
 */
unitlessStyleKeys.forEach(prop => {
	prefixes.forEach(prefix => {
		unitlessStyleKeys.push(prefixKey(prefix, prop));
	});
});

/**
 * Add all unitless style keys to valid style keys.
 */
unitlessStyleKeys.forEach(prop => {
	if (validStyleKeys.includes(prop)) {
		validStyleKeys.push(prop);
	}
});
